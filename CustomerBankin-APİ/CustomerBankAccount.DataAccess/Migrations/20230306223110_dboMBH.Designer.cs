// <auto-generated />
using System;
using CustomerBankAccount.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomerBankAccount.DataAccess.Migrations
{
    [DbContext(typeof(CBADbContext))]
    [Migration("20230306223110_dboMBH")]
    partial class dboMBH
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdiSoyadi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Adres")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TCKimlikNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TelefonNo")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer1");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdiSoyadi = "MUSA SEKEROGLU",
                            Adres = "Pursaklar/ANKARA",
                            AktifMi = true,
                            EmailAdres = "drnmaskr2005@gmail.com",
                            MusteriNo = "10203040",
                            TCKimlikNo = "63862401392",
                            TelefonNo = "05520108651"
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer1Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer1Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "DenizbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "1101177809",
                            IbanNo = "TR670001200190031101177809",
                            MusteriNo = "10203040",
                            SubeAdi = "DENİZBANK/ANKARA/PURSAKLAR",
                            SubeKodu = 1010
                        },
                        new
                        {
                            Id = 2,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "DenizbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "1101166820",
                            IbanNo = "TR670001200190031101166820",
                            MusteriNo = "10203040",
                            SubeAdi = "DENİZBANK/ANKARA/PURSAKLAR",
                            SubeKodu = 1010
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer1Account1Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlıcıAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlıcıHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AlıcıIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("AlıcıSubeKodu")
                        .HasColumnType("int");

                    b.Property<string>("GelenTransferHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GelenTransferIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GelenTransferTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GelenTransferTutarı")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GönderenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GönderenHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GönderenIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GönderilenTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GönderilenTutar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("İslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşlemAçıklaması")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer1Account1Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlıcıAdSoyad = "",
                            AlıcıHesapNo = "",
                            AlıcıIbanNo = "",
                            AlıcıSubeKodu = 0,
                            GelenTransferHesapNo = "",
                            GelenTransferIbanNo = "",
                            GelenTransferTarih = new DateTime(2023, 3, 7, 1, 31, 9, 297, DateTimeKind.Local).AddTicks(8387),
                            GelenTransferTutarı = 0m,
                            GönderenAdSoyad = "",
                            GönderenHesapNo = "",
                            GönderenIbanNo = "",
                            GönderilenTarih = new DateTime(2023, 3, 7, 1, 31, 9, 296, DateTimeKind.Local).AddTicks(1956),
                            GönderilenTutar = 0m,
                            İslemTipi = "",
                            İşlemAçıklaması = ""
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer1Account1Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer1Account1Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "DenizbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "1101177809",
                            IbanNo = "TR670001200190031101177809",
                            MusteriNo = "10203040",
                            SubeAdi = "DENİZBANK/ANKARA/PURSAKLAR",
                            SubeKodu = 1010
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer1Account2Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlıcıAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlıcıHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AlıcıIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("AlıcıSubeKodu")
                        .HasColumnType("int");

                    b.Property<string>("GelenTransferHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GelenTransferIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GelenTransferTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GelenTransferTutarı")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GönderenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GönderenHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GönderenIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GönderilenTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GönderilenTutar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("İslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşlemAçıklaması")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer1Account2Activities");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AlıcıAdSoyad = "",
                            AlıcıHesapNo = "",
                            AlıcıIbanNo = "",
                            AlıcıSubeKodu = 0,
                            GelenTransferHesapNo = "",
                            GelenTransferIbanNo = "",
                            GelenTransferTarih = new DateTime(2023, 3, 7, 1, 31, 9, 298, DateTimeKind.Local).AddTicks(4497),
                            GelenTransferTutarı = 0m,
                            GönderenAdSoyad = "",
                            GönderenHesapNo = "",
                            GönderenIbanNo = "",
                            GönderilenTarih = new DateTime(2023, 3, 7, 1, 31, 9, 298, DateTimeKind.Local).AddTicks(3750),
                            GönderilenTutar = 0m,
                            İslemTipi = "",
                            İşlemAçıklaması = ""
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer1Account2Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer1Account2Details");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "DenizbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "1101166820",
                            IbanNo = "TR670001200190031101166820",
                            MusteriNo = "10203040",
                            SubeAdi = "DENİZBANK/ANKARA/PURSAKLAR",
                            SubeKodu = 1010
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdiSoyadi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Adres")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TCKimlikNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TelefonNo")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer2");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdiSoyadi = "ELİF DEREN SEKEROGLU",
                            Adres = "Pursaklar/ANKARA",
                            AktifMi = true,
                            EmailAdres = "drnmaskr2005@gmail.com",
                            MusteriNo = "00001111",
                            TCKimlikNo = "60601536186",
                            TelefonNo = "05520108651"
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer2Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer2Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "DenizbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "1101177000",
                            IbanNo = "TR670001200190031101177000",
                            MusteriNo = "00001111",
                            SubeAdi = "DENİZBANK/ANKARA/KEÇİÖREN",
                            SubeKodu = 2121
                        },
                        new
                        {
                            Id = 2,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "DenizbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "1101166111",
                            IbanNo = "TR670001200190031101166111",
                            MusteriNo = "00001111",
                            SubeAdi = "DENİZBANK/ANKARA/KEÇİÖREN",
                            SubeKodu = 2121
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer2Account1Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlıcıAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlıcıHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AlıcıIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("AlıcıSubeKodu")
                        .HasColumnType("int");

                    b.Property<string>("GelenTransferHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GelenTransferIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GelenTransferTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GelenTransferTutarı")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GönderenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GönderenHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GönderenIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GönderilenTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GönderilenTutar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("İslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşlemAçıklaması")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer2Account1Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlıcıAdSoyad = "",
                            AlıcıHesapNo = "",
                            AlıcıIbanNo = "",
                            AlıcıSubeKodu = 0,
                            GelenTransferHesapNo = "",
                            GelenTransferIbanNo = "",
                            GelenTransferTarih = new DateTime(2023, 3, 7, 1, 31, 9, 300, DateTimeKind.Local).AddTicks(5799),
                            GelenTransferTutarı = 0m,
                            GönderenAdSoyad = "",
                            GönderenHesapNo = "",
                            GönderenIbanNo = "",
                            GönderilenTarih = new DateTime(2023, 3, 7, 1, 31, 9, 300, DateTimeKind.Local).AddTicks(5109),
                            GönderilenTutar = 0m,
                            İslemTipi = "",
                            İşlemAçıklaması = ""
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer2Account1Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer2Account1Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "DenizbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "1101177000",
                            IbanNo = "TR670001200190031101177000",
                            MusteriNo = "00001111",
                            SubeAdi = "DENİZBANK/ANKARA/KEÇİÖREN",
                            SubeKodu = 1111
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer2Account2Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlıcıAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlıcıHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AlıcıIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("AlıcıSubeKodu")
                        .HasColumnType("int");

                    b.Property<string>("GelenTransferHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GelenTransferIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GelenTransferTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GelenTransferTutarı")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GönderenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GönderenHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GönderenIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GönderilenTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GönderilenTutar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("İslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşlemAçıklaması")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer2Account2Activities");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AlıcıAdSoyad = "",
                            AlıcıHesapNo = "",
                            AlıcıIbanNo = "",
                            AlıcıSubeKodu = 0,
                            GelenTransferHesapNo = "",
                            GelenTransferIbanNo = "",
                            GelenTransferTarih = new DateTime(2023, 3, 7, 1, 31, 9, 301, DateTimeKind.Local).AddTicks(832),
                            GelenTransferTutarı = 0m,
                            GönderenAdSoyad = "",
                            GönderenHesapNo = "",
                            GönderenIbanNo = "",
                            GönderilenTarih = new DateTime(2023, 3, 7, 1, 31, 9, 301, DateTimeKind.Local).AddTicks(181),
                            GönderilenTutar = 0m,
                            İslemTipi = "",
                            İşlemAçıklaması = ""
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.ABANKCustomer2Account2Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ABANKCustomer2Account2Details");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "DenizbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "1101166111",
                            IbanNo = "TR670001200190031101166111",
                            MusteriNo = "00001111",
                            SubeAdi = "DENİZBANK/ANKARA/KEÇİÖREN",
                            SubeKodu = 2121
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdiSoyadi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Adres")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TCKimlikNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TelefonNo")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer1");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdiSoyadi = "TAMAY LİNA SEKEROGLU",
                            Adres = "Pursaklar/ANKARA",
                            AktifMi = true,
                            EmailAdres = "ayse_98@gmail.com",
                            MusteriNo = "00002222",
                            TCKimlikNo = "62800491280",
                            TelefonNo = "05302938227"
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer1Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer1Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "HalkbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "2204881999",
                            IbanNo = "TR880008200190032204881999",
                            MusteriNo = "00002222",
                            SubeAdi = "HALKBANK/ANKARA/PURSAKLAR",
                            SubeKodu = 3030
                        },
                        new
                        {
                            Id = 2,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "HalkbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "2204114333",
                            IbanNo = "TR880008200190032204114333",
                            MusteriNo = "00002222",
                            SubeAdi = "HALKBANK/ANKARA/PURSAKLAR",
                            SubeKodu = 3030
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer1Account1Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlıcıAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlıcıHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AlıcıIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("AlıcıSubeKodu")
                        .HasColumnType("int");

                    b.Property<string>("GelenTransferHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GelenTransferIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GelenTransferTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GelenTransferTutarı")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GönderenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GönderenHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GönderenIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GönderilenTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GönderilenTutar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("İslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşlemAçıklaması")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer1Account1Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlıcıAdSoyad = "",
                            AlıcıHesapNo = "",
                            AlıcıIbanNo = "",
                            AlıcıSubeKodu = 0,
                            GelenTransferHesapNo = "",
                            GelenTransferIbanNo = "",
                            GelenTransferTarih = new DateTime(2023, 3, 7, 1, 31, 9, 308, DateTimeKind.Local).AddTicks(7939),
                            GelenTransferTutarı = 0m,
                            GönderenAdSoyad = "",
                            GönderenHesapNo = "",
                            GönderenIbanNo = "",
                            GönderilenTarih = new DateTime(2023, 3, 7, 1, 31, 9, 308, DateTimeKind.Local).AddTicks(5105),
                            GönderilenTutar = 0m,
                            İslemTipi = "",
                            İşlemAçıklaması = ""
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer1Account1Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer1Account1Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "HalkbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "2204881999",
                            IbanNo = "TR880008200190032204881999",
                            MusteriNo = "00002222",
                            SubeAdi = "HALKBANK/ANKARA/PURSAKLAR",
                            SubeKodu = 3030
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer1Account2Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlıcıAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlıcıHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AlıcıIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("AlıcıSubeKodu")
                        .HasColumnType("int");

                    b.Property<string>("GelenTransferHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GelenTransferIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GelenTransferTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GelenTransferTutarı")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GönderenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GönderenHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GönderenIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GönderilenTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GönderilenTutar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("İslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşlemAçıklaması")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer1Account2Activities");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AlıcıAdSoyad = "",
                            AlıcıHesapNo = "",
                            AlıcıIbanNo = "",
                            AlıcıSubeKodu = 0,
                            GelenTransferHesapNo = "",
                            GelenTransferIbanNo = "",
                            GelenTransferTarih = new DateTime(2023, 3, 7, 1, 31, 9, 309, DateTimeKind.Local).AddTicks(7608),
                            GelenTransferTutarı = 0m,
                            GönderenAdSoyad = "",
                            GönderenHesapNo = "",
                            GönderenIbanNo = "",
                            GönderilenTarih = new DateTime(2023, 3, 7, 1, 31, 9, 309, DateTimeKind.Local).AddTicks(6827),
                            GönderilenTutar = 0m,
                            İslemTipi = "",
                            İşlemAçıklaması = ""
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer1Account2Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer1Account2Details");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "HalkbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "2204114333",
                            IbanNo = "TR880008200190032204114333",
                            MusteriNo = "00002222",
                            SubeAdi = "HALKBANK/ANKARA/PURSAKLAR",
                            SubeKodu = 3030
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdiSoyadi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Adres")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TCKimlikNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TelefonNo")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer2");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AdiSoyadi = "AYŞE SEKEROGLU",
                            Adres = "Pursaklar/ANKARA",
                            AktifMi = true,
                            EmailAdres = "ayse_98@gmail.com",
                            MusteriNo = "90807060",
                            TCKimlikNo = "66775304200",
                            TelefonNo = "05302938227"
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer2Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer2Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "HalkbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "2204881106",
                            IbanNo = "TR880008200190032204881106",
                            MusteriNo = "90807060",
                            SubeAdi = "HALKBANK/ANKARA/KEÇİÖREN",
                            SubeKodu = 2020
                        },
                        new
                        {
                            Id = 2,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "HalkbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "2204114308",
                            IbanNo = "TR880008200190032204114308",
                            MusteriNo = "90807060",
                            SubeAdi = "HALKBANK/ANKARA/KEÇİÖREN",
                            SubeKodu = 2020
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer2Account1Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlıcıAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlıcıHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AlıcıIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("AlıcıSubeKodu")
                        .HasColumnType("int");

                    b.Property<string>("GelenTransferHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GelenTransferIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GelenTransferTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GelenTransferTutarı")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GönderenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GönderenHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GönderenIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GönderilenTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GönderilenTutar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("İslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşlemAçıklaması")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer2Account1Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlıcıAdSoyad = "",
                            AlıcıHesapNo = "",
                            AlıcıIbanNo = "",
                            AlıcıSubeKodu = 0,
                            GelenTransferHesapNo = "",
                            GelenTransferIbanNo = "",
                            GelenTransferTarih = new DateTime(2023, 3, 7, 1, 31, 9, 303, DateTimeKind.Local).AddTicks(7456),
                            GelenTransferTutarı = 0m,
                            GönderenAdSoyad = "",
                            GönderenHesapNo = "",
                            GönderenIbanNo = "",
                            GönderilenTarih = new DateTime(2023, 3, 7, 1, 31, 9, 303, DateTimeKind.Local).AddTicks(6597),
                            GönderilenTutar = 0m,
                            İslemTipi = "",
                            İşlemAçıklaması = ""
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer2Account1Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable(" BBANKCustomer2Account1Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "HalkbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "2204881106",
                            IbanNo = "TR880008200190032204881106",
                            MusteriNo = "90807060",
                            SubeAdi = "HALKBANK/ANKARA/KEÇİÖREN",
                            SubeKodu = 2020
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer2Account2Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlıcıAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlıcıHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AlıcıIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("AlıcıSubeKodu")
                        .HasColumnType("int");

                    b.Property<string>("GelenTransferHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GelenTransferIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GelenTransferTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GelenTransferTutarı")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GönderenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GönderenHesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GönderenIbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GönderilenTarih")
                        .HasColumnType("date");

                    b.Property<decimal>("GönderilenTutar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("İslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşlemAçıklaması")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer2Account2Activities");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AlıcıAdSoyad = "",
                            AlıcıHesapNo = "",
                            AlıcıIbanNo = "",
                            AlıcıSubeKodu = 0,
                            GelenTransferHesapNo = "",
                            GelenTransferIbanNo = "",
                            GelenTransferTarih = new DateTime(2023, 3, 7, 1, 31, 9, 304, DateTimeKind.Local).AddTicks(6954),
                            GelenTransferTutarı = 0m,
                            GönderenAdSoyad = "",
                            GönderenHesapNo = "",
                            GönderenIbanNo = "",
                            GönderilenTarih = new DateTime(2023, 3, 7, 1, 31, 9, 304, DateTimeKind.Local).AddTicks(5979),
                            GönderilenTutar = 0m,
                            İslemTipi = "",
                            İşlemAçıklaması = ""
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.BBANKCustomer2Account2Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GünlükTransferLimiti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapAdi")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("HesapAktifMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("HesapBakiye")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HesapNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IbanNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SubeKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BBANKCustomer2Account2Details");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            GünlükTransferLimiti = 2500m,
                            HesapAdi = "HalkbankVadesizTL",
                            HesapAktifMi = true,
                            HesapBakiye = 10000m,
                            HesapNo = "2204114308",
                            IbanNo = "TR880008200190032204114308",
                            MusteriNo = "90807060",
                            SubeAdi = "HALKBANK/ANKARA/KEÇİÖREN",
                            SubeKodu = 2020
                        });
                });

            modelBuilder.Entity("CustomerBankAccount.Entities.Models.CustomerLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("TCKimlikNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("CustomerLogins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = "Customer1",
                            Sifre = "Musa",
                            TCKimlikNo = "63862401392"
                        },
                        new
                        {
                            Id = 2,
                            Role = "Customer2",
                            Sifre = "Deren",
                            TCKimlikNo = "60601536186"
                        },
                        new
                        {
                            Id = 3,
                            Role = "Customer1",
                            Sifre = "Ayse",
                            TCKimlikNo = "66775304200"
                        },
                        new
                        {
                            Id = 4,
                            Role = "Customer2",
                            Sifre = "Tamay",
                            TCKimlikNo = "66800491280"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
